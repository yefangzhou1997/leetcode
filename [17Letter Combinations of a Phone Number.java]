public List<String> letterCombinations(String digits) {
        List<String> r = new ArrayList<String>();
        if (digits.equals("")) return r;

        String[] map = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        int n = 1, len = digits.length();

        for (int i = 0; i < len; i++) {
            int t = digits.charAt(i) - 48;
            if (t == 7 || t == 9) n = n * 4;
            else n = n * 3;
        }

        int singleRepeat = n;
        for (int i = 0; i < n; i++) r.add("");

        for (int i = 0; i < len; i++) {
            int index = 0, c = digits.charAt(i) - 48, clen = map[c].length();

            singleRepeat = singleRepeat / clen;
            int roundRepeat = n / (singleRepeat * clen);

            for (int round = 0; round < roundRepeat; round++) {
                for (int j = 0; j < clen; j++) {
                    for (int single = 0; single < singleRepeat; single++) {
                        r.set(index, r.get(index) + map[c].charAt(j));
                        index++;
                    }
                }
            }
        }

        return r;
    }
